#!/bin/bash
# Author: Roi Diéguez - aka 47z!Lu7h

# --> Check if stdout is a terminal...
if test -t 1; then
    # --> See if it supports colors...
    ncolors=$(tput colors)

	if test -n "$ncolors" && test $ncolors -ge 8; then
		under='$(tput smul)'		# --> Set underline
		rem_under='$(tput rmul)'	# --> Remove underline
		bold="$(tput bold)"
		stnd="$(tput smso)"
		end="$(tput sgr0)"
		black="$(tput setaf 0)"
		red="$(tput setaf 1)"
		green="$(tput setaf 2)"
		yellow="$(tput setaf 3)"
		blue="$(tput setaf 4)"
		purple="$(tput setaf 5)"
		cyan="$(tput setaf 6)"
		white="$(tput setaf 7)"
	fi
fi

# --> Globals
declare -r packages="zsh rofi kitty git jq cmake npm g++ gettext feh dash bat meson neofetch wget curl xclip net-tools openvpn html2text fzf rlwrap gpick meson trash-cli brightnessctl qt5ct jsbeautifier lxappearance "
declare -r dpnDeb_Bspwm="libxcb-xinerama0-dev libxcb-icccm4-dev libxcb-randr0-dev libxcb-util0-dev libxcb-ewmh-dev libxcb-keysyms1-dev libxcb-shape0-dev"
declare -r dpnDeb_Poly="build-essential cmake cmake-data pkg-config python3-sphinx python3-packaging libuv1-dev libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev libjsoncpp-dev libmpdclient-dev libcurl4-openssl-dev libnl-genl-3-dev"
declare -r dpnDeb_Picom="libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-dpms0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-glx0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl-dev libegl-dev libpcre2-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev"
declare -r dpnFed_Bspwm="libxcb xcb-util xcb-util-wm xcb-util-keysyms libxcb-devel xcb-util-wm-devel xcb-util-keysyms-devel xcb-util-devel"
declare -r dpnFed_Picom="dbus-devel gcc libconfig-devel libdrm-devel libev-devel libX11-devel libX11-xcb libXext-devel libxcb-devel libGL-devel libEGL-devel meson pcre2-devel pixman-devel uthash-devel xcb-util-image-devel xcb-util-renderutil-devel xorg-x11-proto-devel"
declare -r dpnFed_Poly="gcc-c++ clang cmake @development-tools python3-sphinx python3-packaging cairo-devel libuv xcb-util-devel libxcb-devel xcb-proto xcb-util-image-devel xcb-util-wm-devel xcb-util-xrm-devel xcb-util-cursor-devel alsa-lib-devel pulseaudio-libs-devel i3-wm jsoncpp-devel libmpdclient-devel libcurl-devel wireless-tools-devel libnl3-devel"
declare -r dpnArch_Bspwm="libxcb xcb-util xcb-util-wm xcb-util-keysyms"
declare -a fonts=( ComicShannsMono Iosevka IosevkaTerm )

declare -r cwd=$(pwd)
declare -r OS=$(cat /etc/*release | grep '^ID_LIKE' | awk '{print $NF}' FS='=')
declare -r VERSION=$(cat /etc/*release | grep '^VERSION_ID' |  awk '{print $NF}' FS='=' | tr -d '"' )
declare -r NAME=$(cat /etc/*release | grep '^NAME' | awk '{print $NF}' FS='='| tr -d '"' |  awk '{print $1}')
declare -r ID=$(cat /etc/*release | grep '^ID' | awk '{print $NF}' FS='=')



trap ctrl_c INT

function banner(){
echo -ne "\t\t\t${red}${bold}
 ▄█████  ██████ ██▓███  █     █░███▄ ▄███▓▄████▄  ██▓    ██▓▄████▄
▓██████▒██    ▒▓██░  ██▓█░ █ ░█▓██▒▀█▀ ██▒██▀ ▀█ ▓██▒   ▓██▒██▀ ▀█
█    ▄█░ ▓██▄  ▓██░ ██▓▒█░ █ ░█▓██    ▓██▒▓█    ▄▒██░   	▒██▒▓██
▒██░█▀   ▒   ██▒██▄█▓▒ ░█░ █ ░█▒██    ▒██▒▓▓▄ ▄██▒██░   ░██▒▓▓▄ ▄██▒
░▓█  ▀█▒█████▒▒██▒ ░  ░░██▒██▓▒██▒   ░██▒ ▓███▀ ░██████░██▒ ▓███▀ ░
░▒▓███▀▒ ▒▓▒ ▒ ▒▓▒░ ░  ░ ▓░▒ ▒ ░ ▒░   ░  ░ ░▒ ▒  ░ ▒░▓  ░▓ ░ ░▒ ▒░
░▒░  ░░ ${bold}${red}By ${cyan}47z!Lu7h${end}${bold}${red}${tandout} :)${red}  ░ ░ ░    ▒    ░ ░  ░      ░ ░    ░
 ░ ░		▒ ░	░	░	░${end}"
}

function ctrl_c(){

	echo -ne "\n\n\t\t${bold}${red}<|[${black}!${red}]|> ${cyan}Ctrl+C ${black}--->${red}Exiting${cyan}!! ${red}\n\n\n"
	exit 1
}

	# --> Complie Bspwm & Sxhkd
function compile_bspwm(){
	tput cnorm

	mkdir bspwm && cd bspwm
	echo -ne "\n\n\t${bold}${cyan}<|[+]|>${green}$ Cloning bspwm & sxhkd${cyan} -->${end}${cyan}\n\n"
	sleep 1 && git clone "https://github.com/baskerville/bspwm.git" && cd bspwm && make && sudo make install
	if [ $? -eq 0 ]; then
		echo -ne "\n\t\t${bold}${cyan}<|[+]|>${green} Cloning Sxhkd ${cyan}~~${bold}${cyan}>\n\n\n" && sleep 1 &&
		git clone "https://github.com/baskerville/sxhkd.git" && cd sxhkd && make && sudo make install
		if [ $? -eq 0 ]; then
			cd ../../../ && rm -rf bspwm
			if [ $? -eq 0 ]; then
				echo -ne "\t${end}${white}󱞩 ${bold}${green} ${end}${white}${bold}${red}${red}${end}${white}${bold}${blue} "
			else
				echo -e "\n\t\t${bold}${red}<|[!]|> ${green} Failing removing folder ${cyan}${stnd}:/ ${end}\n" && sleep 1 && exit 1
			fi
		else
			echo -e "\n\t\t${bold}${red}<|[!]|> ${green} Failing compiling Sxhkd ${cyan}${stnd}:/ ${end}\n" && sleep 1 && exit 1
		fi
	else
		echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}Failing Compliling bspwm ${red}${stnd}:/  ${end}\n" && sleep 1 && exit 1
	fi

	tput civis
}

	# --> Compile polybar
function compile_polybar() {
	tput cnorm

	mkdir polybar && cd polybar
	echo -ne "\n\t${bold}${cyan}|[+]|> ${green}Cloning & compiling Polybar${cyan}~~${bold}${cyan}> ${end}${cyan}\n\n\n" && sleep 1
	git clone --recursive "https://github.com/polybar/polybar" && cd polybar && mkdir build && cd build && cmake ..
	if [ $? -eq 0 ]; then
		make -j$(nproc) && sudo make install
		if [ $? -eq 0 ]; then
			cd ../../../ && rm -rf polybar
		else
			echo -ne "\n\n\t\t${bold}${red}|[!]|> ${cyan}Failing compiling Polybar ${red}${stnd}:/  ${end}\n" && sleep 1 && exit 1
		fi
	else
		echo -e "\n\n\t\t${bold}${red}<|[!]|> ${cyan}Failing compiling Polybar ${red}${stnd}:/ ${end}\n" && sleep 1 && exit 1
	fi

	tput civis
}

	# --> Compile Picom
function compile_picom() {
	tput cnorm

	mkdir picom && cd picom
	echo -ne "\n\t${bold}${cyan}|[+]|> ${end}${bold}${white}${bold} Cloning & compliling Picom ${end}${cyan}~~${bold}${cyan}>${cyan}\n\n\n"
	sleep 1 && git clone "https://github.com/yshui/picom.git" && cd picom
	if [ $? -eq 0 ]; then
		git submodule update --init --recursive && meson setup --buildtype=release . build
		if [ $? -eq 0 ]; then
			ninja -C build && ninja -C build install
			if [ $? -eq 0 ]; then
				cd ../../ && rm -rf picom
				echo -ne "\t${end}${cyan}󱞩 ${bold}${green}   ${end}${white}${bold}󰨾 ${end}${white}  ${bold}${purple} ${cyan} "
			else
				echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Something went wrong Compiling Picom ${red}${stnd}:/ ${end}\n" && sleep 1 && exit 1
			fi
		else
			echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend compiling Picom ${red}${stnd}:/ ${end}\n" && sleep 1 && exit 1
		fi
	else
		echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}We Cant Download From Github ${red}${stnd}:/ ${end}\n" && sleep 1 && exit 1
	fi

	tput civis
}

	# --> VS-Code
function code() {
	tput cnorm

		if [ $OS = debian ]; then
			echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Installing VS Code ${end}${cyan}~~${bold}${cyan}> \n\n"
			sleep 1
			sudo apt-get install wget gpg && wget -qO- "https://packages.microsoft.com/keys/microsoft.asc" | gpg --dearmor > packages.microsoft.gpg
			if [ $? -eq 0 ]; then
				sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
				sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
				if [ $? -eq 0 ]; then
					rm -f packages.microsoft.gpg
					sudo apt install apt-transport-https
					sudo apt update && sudo apt install code
					if [ $? -eq 0 ]; then
						code & sleep 5 && sudo killall code && cp -r $cwd/misc/code/user/* ~/.config/Cod*/User/
					else
						echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend getting VS Code ${red}${stnd}:/ ${end}${end}\n" && sleep 1 && exit 1
					fi
				else
					echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend getting VS Code ${red}${stnd}:/ ${end}\n" && sleep 1 && exit 1
				fi
			else
				echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend getting VS Code ${red}${stnd}:/ ${end}\n" && sleep 1 && exit 1
			fi

			elif [ $OS = fedora ]; then
				echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Installin VS Code ${end}${cyan}~~${bold}${cyan}> \n\n"

				sleep 1 && sudo rpm --import "https://packages.microsoft.com/keys/microsoft.asc" &&
				sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
				if [ $? -eq 0 ]; then
					dnf check-update && sudo dnf install code
					code & disown; sleep 3 && sudo killall code && cp -r $cwd/misc/code/user/* ~/.config/Cod*/User/
	    		else
					echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend getting VS Code ${red}${stnd}:/ ${end}${end}\n" && sleep 1 && exit 1
			fi

		else
			echo -ne "\n\t\t${bold}${red}<|[!]|> ${blue} System not ${red}suported ${stnd}:/ ${end}${end}\n" && sleep 1 && exit 1
		fi
	tput civis
}

	# --> Lsd
function lsd(){
	tput cnorm

	if [ $OS = debian ]; then
		sudo apt install lsd -y
		if [ $? -eq 0 ]; then
			echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}bspmw D@N3!${red}${stnd}${end}" && sleep 1

		else
			echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Downloading lsd ${end}${cyan}~~${bold}${cyan}> \n\n"
			sleep 1 && wget "https://github.com/lsd-rs/lsd/releases/download/0.23.1/lsd_0.23.1_amd64.deb" -O lsd.deb && sudo dpkg -i lsd.deb && rm lsd.deb
			if [ $? -eq 0 ]; then
				echo -ne "\t${end}${red}󱞩 ${bold}${green} ${end}${white}${bold}${end}${white}${bold}${blue} "
			else
				echo -e "\n\n\t\t${bold}${red}<|[!]|> ${black} Something went wrong getting lsd  ${red}${stnd} :/${end}${end}\n\n\n" && sleep 1 && exit 1
			fi
		fi

	elif [ $OS = arch ]; then
		sudo pacman -S lsd

	elif [ $OS = fedora ]; then
		dnf install lsd

	else
		echo -ne "\n\t\t${bold}${red}<|[!]|> ${blue} System not ${red}suported ${stnd}:/ ${end}${end}\n" && sleep 1 && exit 1
	fi

	tput civis
}



	# --> Firefox-esr
function firefox_esr() {
	tput cnorm

	which firefox-esr
	if [ $? -eq 0 ]; then
		if [ -d ~/.mozilla/ ] &&  [ $NAME = ubuntu ]; then
			echo -ne "\n\t${bold}${cyan}<|[+]|> ${end}${blue}Setting firefox-esr theme${bold}${cyan}! \n\n"
			sudo apt purge firefox\* && sleep 1 && sudo apt install -y firefox-esr-locale-bg firefox-esr-locale-es &&
			firefox-esr & disown; sleep 4 && sudo killall firefox-esr && sleep 2 &&
			cp -r $cwd/misc/home/.mozilla/firefox/chrome		~/.mozilla/firefox*/*default-esr*/
		else
			cp -r $cwd/misc/home/.mozilla/firefox/chrome		~/.mozilla/firefox*/*default-esr*/
			echo -ne "\t\t\t\t\t\t${bold}${red}󱞩 ${green}  ${end}${white}${bold}${red}${end}${white}|${end}"
		fi
	else
		if  [ $OS = debian ]; then
			sudo apt update && sudo apt install firefox-esr -y && sudo apt autoremove -y && sudo apt autoclean -y &&
			firefox-esr & disown; sleep 4 && sudo killall firefox-esr && sleep 1 &&
			cp -r $cwd/misc/home/.mozilla/firefox/chrome/		$HOME/.mozilla/firefox-*/*.default-esr*/

		elif [ if $NAME = ubuntu]; then
			echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Installing firefox-esr${cyan}! \n"
			sleep 1 && sudo add-apt-repository ppa:mozillateam/ppa && sudo apt update && sudo apt install firefox-esr &&
			firefox-esr & disown; sleep 4 && sudo killall firefox-esr && sleep 1 &&
			cp -r  $cwd/misc/home/.mozilla/firefox/chrome		$HOME/.mozilla/firefox-*/*.default-esr*/

		else
			echo -ne "\n\t\t${bold}${red}<|[!]|> ${blue} System not ${red}suported ${stnd}:/ ${end}${end}\n"
		fi
	fi

	tput civis
}

	# --> Complie Nvim & cloning NvChad
function nvim() {
	tput cnorm

	which nvim
	if [ $? -eq 0 ]; then
		echo -ne "\t\t\t\t\t${end}${red}󱞩 ${bold}${green} ${end}${white}${bold}${red}${end}${white}${bold}${blue} "
		rm -rf ~/.config/nvim; rm -rf ~/.local/share/nvim; rm -rf ~/.cache/nvim; sudo rm -rf ~/.config/nvim; sudo rm -rf ~/.local/share/nvim; sudo rm -rf ~/.cache/nvim
 		sudo rm -rf /root/.config/nvim; sudo rm -rf /root/.local/share/nvim; sudo rm -rf /root/.cache/nvim; sudo rm -rf /root/.config/nvim; sudo rm -rf /root/.local/share/nvim; sudo rm -rf /root/.cache/nvim
		if [ $? -eq 0 ]; then
			git clone --depth 1 "https://github.com/NvChad/NvChad" ~/.config/nvim  && sudo git clone --depth 1 "https://github.com/NvChad/NvChad" /root/.config/nvim
			if [ $? -eq 0 ]; then
				echo -ne "\t${end}${white}󱞩 ${bold}${green} ${end}${white}${bold}${end}${white}${bold}${blue} "
			else
				echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red} Something went bad cloning NvChad repo ${red}${stnd}:/ ${end}\n\n\n" && sleep 1 && exit 1
			fi
		else
			echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red}  Something went bad removing od folders ${red}${stnd}:/ ${end}\n\n\n" && sleep 1 && exit 1
		fi
	else
		mkdir nvim && cd nvim
		echo -ne "\n\n\t${bold}${cyan}<|[+]|> ${end}${blue}Cloning & compiling neovim + cloning NvChad${cyan} -->\n\n\n" && sleep 1 &&
		git clone "https://github.com/neovim/neovim" && cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo && sudo make install
		if [ $? -eq 0 ]; then
			rm -rf ~/.config/nvim; rm -rf ~/.local/share/nvim; rm -rf ~/.cache/nvim; sudo rm -rf ~/.config/nvim; sudo rm -rf ~/.local/share/nvim; sudo rm -rf ~/.cache/nvim
			sudo rm -rf /root/.config/nvim; sudo rm -rf /root/.local/share/nvim; sudo rm -rf /root/.cache/nvim; sudo rm -rf /root/.config/nvim; sudo rm -rf /root/.local/share/nvim; sudo rm -rf /root/.cache/nvim
			if [ $? -eq 0 ]; then
				git clone --depth 1 "https://github.com/NvChad/NvChad" ~/.config/nvim  && sudo git clone --depth 1 "https://github.com/NvChad/NvChad" /root/.config/nvim
				if [ $? -eq 0 ]; then
					cd ../../ && rm -rf nvim
					if [ $? -eq 0 ]; then
						echo -ne "\t${end}${white}󱞩 ${bold}${green} ${end}${white}${bold}${red}${end}${white}${bold}${blue} "
					else
						echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red} Something went bad removing neovim folder ${red}${stnd}:/  ${end}\n\n\n" && sleep 1 && exit 1
					fi
				else
					echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red} Something went bad cloning NvChad repo ${red}${stnd}:/ ${end}\n\n\n" && sleep 1 && exit 1
				fi
			else
				echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red}  Something went bad removing od folders ${red}${stnd}:/ ${end}\n\n\n" && sleep 1 && exit 1
			fi
		else
			echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red}  Something went bad compiling neovim ${red}${stnd}:/ ${end}\n\n\n" && sleep 1 && exit 1
		fi
	fi

	tput civis
}

	# --> Fonts, Zsh stuff & cp dotfiles
function main(){
	tput cnorm

		# -->  Fonts & Icons
	echo -ne "\n\t${bold}${cyan}<|[+]|> ${end}${blue}Getting fonts & Icons ${cyan}~~${bold}${cyan}> \n\n"

	for font in "${fonts[@]}"; do
		zip_file="${font}.zip"
		download_url="https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.0/${zip_file}"
		echo -ne "\n\t${cyan}<${red}|${cyan}[${red}+${cyan}]${red}|${cyan}>- ${blue}D@Wnl@4D1n6 ${cyan}~~>\n\n\t\t ${red}$download_url\n\n${cyan}"
		wget "$download_url"
		sudo unzip -o "$zip_file" -d /usr/share/fonts && rm "$zip_file"
	done
	sudo find /usr/share/fonts -name '*Windows Compatible*' -delete && fc-cache -fv &&
	wget "https://github.com/EliverLara/candy-icons/archive/refs/heads/master.zip" -O candy-icons.zip &&
	sudo unzip -o candy-icons.zip -d  /usr/share/icons && rm -rf candy-icons.zip

		# -->  Zsh plugins
	if [ $? -eq 0 ]; then
		echo -ne "\n\n\t${bold}${cyan}<|[+]|> ${end}${blue}Cloning zsh plugins ${cyan} -->\n\n\n"

		if [ -d /usr/share/zsh/powerlevel10k ]; then
			echo -ne "\n\t${bold}${black} ${end}${blue}powerlevel10k ${yellow}  ${bold}${green}done  ${end}"
		else
			sudo git clone --depth=1 "https://github.com/romkatv/powerlevel10k.git" /usr/share/zsh/powerlevel10k
		fi

		if [ -d /usr/share/zsh-autocomplete ]; then
			echo -ne "\n\t${bold}${black} ${end}${blue}autocomplete ${yellow} ${bold}\t${green}done  ${end}"
		else
	        	sudo git clone --depth=1 "https://github.com/marlonrichert/zsh-autocomplete.git" /usr/share/zsh-autocomplete
		fi

		if [ -d /usr/share/zsh-fzf-history-search ]; then
			echo -ne "\n\t${bold}${black} ${end}${blue}zf-history-search ${yellow} ${bold}\t${green}done  ${end}"
		else
			sudo git clone "https://github.com/joshskidmore/zsh-fzf-history-search.git"	/usr/share/zsh-fzf-history-search
		fi

		if [ -d /usr/share/zsh/sudo.plugin.zsh ]; then
			echo -ne "\n\t${bold}${black} ${end}${blue}sudo.plugin ${yellow} ${bold}\t${green}done  ${end}"
		else
	        	sudo wget "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh" -P /usr/share/zsh/sudo.plugin.zsh
		fi

		if [ -d /usr/share/zsh-syntax-highlighting ]; then
			echo -ne "\n\t${bold}${black} ${end}${blue}syntax-highlighting${yellow} ${bold}\t${green}done  ${end}"
		else
			sudo git clone "https://github.com/zsh-users/zsh-syntax-highlighting.git"	/usr/share/zsh-syntax-highlighting/
		fi

		sleep 0.5 && echo -ne "\n\n\t${bold}${cyan}<[+]> ${end}${blue}Coping dotfiles ${cyan}\n\n"

		if [ -d $HOME/.config/bspwm ]; then
			mv $HOME/.config/bspwm $HOME/.config/bspwm.OLD
		fi

		if [ -d $HOME/.config/polybar ]; then
			mv $HOME/.config/polybar $HOME/.config/polybar.OLD
		fi

		if [ -d $HOME/.config/picom ]; then
			mv $HOME/.config/picom $HOME/.config/picom.OLD
		fi

		if [ -d $HOME/.config/sxhkd ]; then
			mv $HOME/.config/sxhkd $HOME/.config/sxhkd.OLD
		fi

		cp -r $cwd/config/* $HOME/.config/ && mv $HOME/.zshrc $HOME/.zshrc.OLD && cp -r $cwd/misc/home/.*? $HOME && sudo sed -i "s/bash/zsh/g" /etc/passwd && sudo ln -sf $HOME/.zsh /root && sudo ln -s -f $HOME/.zshrc /root && sudo ln -s -f $HOME/.p10k.zsh /root
		if [ $? -eq 0 ]; then
			echo -ne "\n\t\t${bold}${black} ${end}${yellow}Dotfiles  ${yellow} ${bold}\t${green} ${end}"
		else
			echo -e "\n\n\t\t${bold}${red}<|[!]|> ${black} Something went bad coping files ${red}${stnd}: /${end}\n\n\n" && sleep 1 && exit 1
		fi
	else
		echo -e "\n\n\t\t${bold}${red}<|[!]|> ${black} Something went bad getting fonts|Icons ${red}${stnd} :/${end}\n\n\n" && sleep 1 && exit 1
	fi

	tput civis
}

	# --> Nice t@@L! ;D
function htb-Xplorer(){
	tput cnorm

	if [ -d /opt/h4Ck/htbXplorer-Plus ]; then
		echo -ne "\n\n${bold}${red}|${end}${red}󰓗 \t${end}${white}<~${end}${white}${bold}${green} 󰆧 ${end}${white}~> \t${end}${red}H7b${yellow}~${red}Xpl@R3r ${yellow}already in the system${red}!\t${purple}${bold}󱝂 ${end}${white}${bold}${blue}󱜚 "; echo
	else
		echo -ne "\n\t${bold}${cyan}<|[+]|> ${end}${blue}Cloning htbXplorer from github${cyan}~~${bold}${cyan}> ${end}${cyan}\n\n"
		sleep 1 && sudo mkdir -p /opt/h4Ck/htbXplorer-Plus
	    if [ $? -eq 0 ]; then
			sudo git clone "https://github.com/4tz1Lu7h/htbXplorer-Plus.git" /opt/h4Ck/htbXplorer-Plus
		    if [ $? -eq 0 ]; then
				sudo chmod +x /opt/h4Ck/htbXplorer-Plus/htbXplorer
				echo -ne "\n\t\t${bold}${purple}~!~!~!~   ${cyan}HtbXplorer-${red}Plus ${cyan}done!   ${purple} ~!~!~!~\n\n"
			else
		        echo -e "\n\n\t\t${bold}${red}<|[!]|> ${cyan}Something went bad cloning the repo ${red}${stnd}:/ ${end}\n" && sleep 1 && exit 1
			fi
		else
        	echo -e "\n\n\t\t${bold}${red}<|[!]|> ${cyan}Something went bad creating the folder ${red}${stnd}:/ ${end}\n" && sleep 1 && exit 1
		fi
	fi

	tput civis
}

function common() {
	tput cnorm

	which code
	if [ $? -ne 0 ]; then
		code
	fi

	which lsd
	if [ $? -ne 0 ]; then
		lsd
	fi

	firefox_esr & htb-Xplorer

	which bspwm
	if [ $? -ne 0 ]; then
		if [ $OS = debian ]; then
				sudo apt install bspwm sxhkd -y
			if [ $? -eq 0 ]; then
				echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}bspmw D@N3!${red}${stnd}${end}" && sleep 1
			else
				sudo apt install $dpnDeb_Bspwm -y && compile_bspwm
			fi

		elif [ $OS = arch ]; then
				sudo pacman -S bwpwm sxhkd
			if [ $? -eq 0 ]; then
	             echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}bspmw D@N3!${red}${stnd}${end}\n" && sleep 1
			else
				sudo pacman -S $dpnArch_Bspwm && compile_bspwm
			fi

		elif [ $OS = fedora ]; then
				sudo dnf install bspwm sxhkd
			if [ $? -eq 0 ]; then
	            echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}bspmw D@N3!${red}${stnd}${end}\n" && sleep 1
			else
				sudo dnf install $dpnFed_Bspwm && compile_bspwm
			fi
		else
			echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}sorry, system not supported${red}${stnd}$:/{end}\n" && sleep 1
		fi
	fi

	which polybar
	if [ $? -ne 0 ]; then
		if [ $OS = debian ]; then
			sudo apt install polybar -y
			if [ $? -eq 0 ]; then
				echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}P0ly D@N3!${red}${stnd}${end}" && sleep 1
            else
				sudo apt install $dpnDeb_Poly -y && compile_polybar
            fi

		elif [ $OS = arch ]; then
			sudo pacman -S polybar
			if [ $? -eq 0 ]; then
	            echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}P0ly d@N3!${red}${stnd}${end}\n" && sleep 1 && exit 1
			else
				compile_polybar
			fi

		elif [ $OS = fedora ]; then
			sudo dnf install polybar
			if [ $? -eq 0 ]; then
	            echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}P0ly d@N3!${red}${stnd}${end}\n" && sleep 1 && exit 1
			else
				sudo dnf install $dpnFed_Poly && compile_polybar
			fi
		else
			echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}sorry, system not supported${red}${stnd}$:/{end}\n" && sleep 1
		fi
	fi

	which picom
	if [ $? -ne 0 ]; then
		if [ $OS = debian ] > /dev/null; then
			sudo apt install picom -y
			if [ $? -eq 0 ]; then
				echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}picom d@N3!${red}${stnd}${end}" && sleep 1
            else
				sudo apt install $dpnDeb_Poly -y && compile_polybar
            fi

		elif [ $OS = arch ]; then
			sudo pacman -S picom
			if [ $? -eq 0 ]; then
	            echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}picom d@N3!${red}${stnd}${end}\n" && sleep 1 && exit 1
			else
				compile_polybar
			fi

		elif [ $OS = fedora ] > /dev/null; then
			sudo dnf install picom
			if [ $? -eq 0 ]; then
	        	echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}picom d@N3!${red}${stnd}${end}\n" && sleep 1 && exit 1
			else
				sudo dnf install $dpnFed_Poly && compile_polybar
			fi
		else
			echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}sorry, system not supported${red}${stnd}$:/{end}\n" && sleep 1
		fi
	fi

	nvim && main

	tput civis
}


################################################################################################################
           ###################  ~~~~~~~~~~~~~~~~ ¡| m41n |! ~~~~~~~~~~~~   #######################
###################################################################################################################

if [ "$EUID" == 0 ];then
	echo -e "\n\n${bold}${red}<|${bold}${black}[${bold}${red}!${bold}${black}]${bold}${red}|${bold}${black}[${bold}${red}!${bold}${black}]${bold}${red}|> \t${cyan}You do not have to be ${red}root ${cyan}to execute this script \t${stnd}${red};-)${end}\n\n" && sleep 1 
	exit 1
fi

banner

echo -ne "\n${cyan}<|${bold}[${red}+${cyan}]${end}${cyan}|${cyan}>${bold}${black} ~~~ ${end}${blue}This Script Will Add ${bold}${cyan}Bspwm ${end}${blue}Desktop Eviroment To Your Linux."
echo -ne "\n${cyan}<|${bold}[${red}+${cyan}]${end}${cyan}|${cyan}>${bold}${black} ~~~ ${end}${blue}Alongside with some other packages like:\n\t\t${cyan}Polybar${blue},${cyan} Picom${blue},${cyan} ZHS${blue},${cyan} Sxhkd${blue},${cyan} Nvim${blue},${cyan} VS-Code${blue},${cyan} firefox_esr${blue},${cyan} Lsd${blue}..."
echo -ne "\n\n\t${red}${bold}<${black}|${red}[${bold}${cyan}!${red}]${black}|${red}> ${end}${cyan}Are you sure you want to continue ${bold}? \n"
echo -ne "\n\t\t${end}${blue}[ ${bold}${cyan}y${end}${blue} / ${bold}${cyan}n${end}${blue} ]${red} ~~> ${bold}${cyan}"

read answer

if [ "$answer" != "${answer#[y/Y]}" ]; then

	echo -e "\n${blue}${bold}======================================================================== "
	echo -e "${blue}${bold}   -|-|-|-|- ${cyan}Installing package for ${end}${red}${OS} ${bold}${cyan}distribution ${end}${blue}-|-|-|-|-"
	echo -e "${blue}${bold}======================================================================== "

	echo -ne "\n\t${cyan}${bold}<|[+]|> ${end}${blue}Upgrading System ${bold}${cyan}~~> \n\n"
	if [ $OS = debian ]; then
		sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y && sudo dpkg --configure -a
	elif [ $OS = arch ]; then
		echo -e "\n\n\t${blue}${bold}======= ${cyan}Still in development for ${bold}${yellow}Arch ${cyan}Distro ${end}${blue}======= \n\n" && sleep 1 && exit 1
	elif [ $OS = fedora ]; then
		echo -e "\n\n\t${blue}${bold}======= ${cyan}Still in development for ${bold}${yellow}Arch ${cyan}Distro ${end}${blue}======= \n\n" && sleep 1 && exit 1
	else
		echo -e "\n\n\t${blue}${bold}=======${end}${blue}Sorry${cyan}, system not ${bold}${yellow}supported ${cyan}Distro ${end}${blue}======= \n\n" && sleep 1 && exit 1
	fi

	echo -ne "\n\t${bold}${cyan}<|[+]|> ${end}${blue}Installing Packages ${bold}${cyan}~~> \n\n\n"
	if [ $OS = debian ]; then
		sudo apt update && sudo apt install -y $packages && sudo apt autoremove -y && sudo apt autoclean -y
	elif [ $OS = arch ]; then
		echo -e "\n\n\t${blue}${bold}======= ${cyan}Still in development for ${bold}${yellow}Arch ${cyan}Distro ${end}${blue}======= \n\n" && sleep 1 && exit 1
	elif [ $OS = fedora ]; then
		echo -e "\n\n\t${blue}${bold}======= ${cyan}Still in development for ${bold}${yellow}v ${cyan}Distro ${end}${blue}======= \n\n" && sleep 1 && exit 1
	else
		echo -e "\n\n\t${blue}${bold}=======${end}${blue}Sorry${cyan}, system not ${bold}${yellow}supported ${cyan}Distro ${end}${blue}======= \n\n" && sleep 1 && exit 1
	fi

	common
	if [ $? -eq 0 ]; then
		echo -ne "\n${bold}${red}<${end}${black}|${end}${blue}[${bold}${red}!${end}${blue}]${black}|${bold}${red}>${end}${blue} To-Dos${red} ~~>${end} \
		\n\t${end}${red}~${end}${blue} Open a terminal & type ${end}${cyan}nvim ${end}${blue}to finish its configuration. \
		\n\t${end}${red}~${end}${blue} For dark theme Firefox-esr, open it & type => ${end}${cyan}about${red}:${end}${cyan}config${end}${blue}, then search for -->\
		\n\t${end}${red}<${end}${cyan}toolkit.legacyUserProfileCustomizations.stylesheets${end}${red}>${blue}, and set it to ${bold}${cyan}True${end}${blue}."
		sleep 1 && echo -ne "\n\n\t${bold}${red}------/-/-/-/~~~~>> >>> ${end}${yellow}Try reboot and select ${bold}${red}Bspwm ${end}${yellow}as desktop Evironment. Enjoy!! ${stnd}${bold}${red};-)${end}${red} <<< <<~~~~~\-\-\-\------${end}\n\n\n" && sleep 1
	else
		echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad with the main installation ${red}${stnd}:/ ${end}${end}\n\n\n" && sleep 1 && exit 1
	fi


elif [ "$answer" != "${answer#[n/N]}" ]; then
	sleep 0.3 && echo -ne "\n${cyan}<${bold}${black}|${cyan}[${black}!${cyan}]${bold}${black}|${end}${cyan}>${bold}${black} ~~~>>  ${red}Have a ${end}${cyan}Nice ${bold}${red}day${end}${black}!!  ${stnd}${red};=)${end}\n\n"
else
	sleep 0.3 && echo -ne "\n${cyan}<${bold}${black}|${cyan}[${black}!${cyan}]${bold}${black}|${end}${cyan}>\t${bold}${black} ~~~>> ${red}Bye${cyan}!! ${bold}${black}<<~~~~${end}\n\n"
fi
