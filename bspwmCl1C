#!/bin/bash
# Author: Roi Diéguez - aka 47z!Lu7h

# --> check if stdout is a terminal...
if test -t 1; then
    # --> see if it supports colors...
    ncolors=$(tput colors)

    if test -n "$ncolors" && test $ncolors -ge 8; then
        bold="$(tput bold)"
        underline="$(tput smul)"
        standout="$(tput smso)"
        end="$(tput sgr0)"
        black="$(tput setaf 0)"
        red="$(tput setaf 1)"
        green="$(tput setaf 2)"
        yellow="$(tput setaf 3)"
        blue="$(tput setaf 4)"
        purple="$(tput setaf 5)"
        cyan="$(tput setaf 6)"
        white="$(tput setaf 7)"
    fi
fi

# --> Globals
declare -r packages_Deb="linux-headers-$(uname -r) zsh bspwm sxhkd polybar rofi picom kitty git jq cmake npm g++ gettext feh dash bat meson neofetch wget curl xclip net-tools openvpn html2text fzf rlwrap gpick meson trash-cli xbacklight brightnessctl qt5ct jsbeautifier lxappearance "

declare -r dpnDeb_Bspwm="libxcb-xinerama0-dev libxcb-icccm4-dev libxcb-randr0-dev libxcb-util0-dev libxcb-ewmh-dev libxcb-keysyms1-dev libxcb-shape0-dev"
declare -r dpnDeb_Poly="build-essential cmake cmake-data pkg-config python3-sphinx python3-packaging libuv1-dev libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev libjsoncpp-dev libmpdclient-dev libcurl4-openssl-dev libnl-genl-3-dev"
declare -r dpnDeb_Picom="libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-dpms0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-glx0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl-dev libegl-dev libpcre2-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev"

declare -r dpnFed_Bspwm="libxcb xcb-util xcb-util-wm xcb-util-keysyms libxcb-devel xcb-util-wm-devel xcb-util-keysyms-devel xcb-util-devel"
declare -r dpnFed_Picom="dbus-devel gcc libconfig-devel libdrm-devel libev-devel libX11-devel libX11-xcb libXext-devel libxcb-devel libGL-devel libEGL-devel meson pcre2-devel pixman-devel uthash-devel xcb-util-image-devel xcb-util-renderutil-devel xorg-x11-proto-devel"
declare -r dpnFed_Poly="gcc-c++ clang cmake @development-tools python3-sphinx python3-packaging cairo-devel libuv xcb-util-devel libxcb-devel xcb-proto xcb-util-image-devel xcb-util-wm-devel xcb-util-xrm-devel xcb-util-cursor-devel alsa-lib-devel pulseaudio-libs-devel i3-wm jsoncpp-devel libmpdclient-devel libcurl-devel wireless-tools-devel libnl3-devel"

declare -r dpnArch_Bspwm="libxcb xcb-util xcb-util-wm xcb-util-keysyms"

trap ctrl_c INT

function banner(){
echo -ne "\n\n\t\t ${red}${bold}
 ▄█████  ██████ ██▓███  █     █░███▄ ▄███▓▄████▄  ██▓    ██▓▄████▄
▓██████▒██    ▒▓██░  ██▓█░ █ ░█▓██▒▀█▀ ██▒██▀ ▀█ ▓██▒   ▓██▒██▀ ▀█
█    ▄█░ ▓██▄  ▓██░ ██▓▒█░ █ ░█▓██    ▓██▒▓█    ▄▒██░   ▒██▒▓██
▒██░█▀   ▒   ██▒██▄█▓▒ ░█░ █ ░█▒██    ▒██▒▓▓▄ ▄██▒██░   ░██▒▓▓▄ ▄██▒
░▓█  ▀█▒█████▒▒██▒ ░  ░░██▒██▓▒██▒   ░██▒ ▓███▀ ░██████░██▒ ▓███▀ ░
░▒▓███▀▒ ▒▓▒ ▒ ▒▓▒░ ░  ░ ▓░▒ ▒ ░ ▒░   ░  ░ ░▒ ▒  ░ ▒░▓  ░▓ ░ ░▒ ▒░
░▒░  ░░ ${bold}${red}By ${cyan}47z!Lu7h${end}${bold}${red}${tandout} :)${red}  ░ ░ ░    ▒    ░ ░  ░      ░ ░    ░
 ░ ░		▒ ░	░	░	░${end}${end}"
}

function ctrl_c(){
	tput cnorm

	echo -ne "\n\n\t\t${bold}${red}<|[!]|> ${black}---> ${cyan}Ctrl+C ${red}Exiting${cyan}!! ${red}\n\n\n"
	sudo rm -rf *.?  2>/dev/null && exit 1

	tput civis
}

	# --> Fonts, Zsh stuff & cp dotfiles
function main(){
	tput cnorm
	echo -ne "\n\n${bold}${red}<|[+]|> ${cyan}Installing ${red}Main ${cyan}package ${red}~> ${cyan} \n\n"
	sleep 2
		# -->  Fonts
	echo -ne "\n\t${bold}${cyan}<|[+]|>> ${blue}Getting fonts $ icons ${end}${cyan}--> \n\n"
	wget "https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/Iosevka.zip" -O  Iosevka.zip  &&
	unzip  Iosevka.zip -d ~/.local/share/fonts && rm -rf  Iosevka.zip && fc-cache - &&
	wget "https://github.com/EliverLara/candy-icons/archive/refs/heads/master.zip" -O icons.zip &&
	unzip icons.zip -d  ~/.local/share/icons && rm -rf icons.zip
	if [ $? -eq 0 ]; then
		echo -ne "\n\t\t${bold}${red} ~!~!~!~  ${yellow}Fonts & icons done!   ${red}~!~!~!~\n\n\n" && sleep 2
			# -->  Zsh plugins
		echo -ne "\n\n\t${bold}${cyan}<|[+]|> ${blue}Cloning zsh plugins ${cyan} -->\n\n\n"
		sleep 2 && rm -rf ~/.zsh && mkdir -p ~/.zsh/plugins && git clone --depth=1 "https://github.com/marlonrichert/zsh-autocomplete.git" ~/.zsh/plugins/zsh-autocomplete
		if [ $? -eq 0 ]; then
			wget "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh" -P ~/.zsh/plugins/sudo.plugin.zsh
			if [ $? -eq 0 ]; then
				curl -L git.io/antigen > ~/.zsh/antigen.zsh
				if [ $? -eq 0 ]; then
					echo -ne "\n${bold}${red}>> ${yellow}All Plugins done${red}!!!\n\n" &&
					sleep 2 && echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Coping home config files ${cyan}\n\n" &&
					cp -r config/* ~/.config/ && cp -r misc/home/.?* ~ && sudo sed -i "s/bash/zsh/g" /etc/passwd && sudo cp -r $HOME/.zsh /root && sudo ln -s -f $HOME/.zshrc /root && sudo ln -s -f $HOME/.p10k.zsh /root
					if [ $? -eq 0 ]; then
						sleep 2 && echo -ne "\n\n${bold}${red}<|[~]|> ${yellow}All config done${red}!!! ${cyan}:D\n\n\n" && sleep 2
					else
						echo -e "\n\n\t\t${bold}${red}<|[!]|> ${black} Something went bad coping files ${red}${standout}: /${end}${end}\n\n\n" && sleep 1 && exit 1
					fi
				else
					echo -e "\n\n\t\t${bold}${red}<|[!]|> ${black} Something went wrong getting antigen ${red}${standout}: /${end}${end}\n\n\n" && sleep 1 && exit 1
				fi
			else
				echo -e "\n\n\t\t${bold}${red}<|[!]|> ${black} Something went wrong getting sudo.plugin ${red}${standout}: /${end}${end}\n\n\n" && sleep 1 && exit 1
			fi
		else
			echo -e "\n\n\t\t${bold}${red}<|[!]|> ${black} Something went wrong getting zsh-autocomplete ${red}${standout}: /${end}${end}\n\n\n" && sleep 1 && exit 1
		fi
	else
		echo -e "\n\n\t\t${bold}${red}<|[!]|> ${black} Something went wrong downloading Iosevka font ${red}${standout} :/${end}${end}\n\n\n" && sleep 1 && exit 1
	fi

	tput civis
}

function code_deb() {
	tput cnorm

	echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Installing VS Code ${end}${cyan}--> \n\n"
	sleep 2
	sudo apt-get install wget gpg && wget -qO- "https://packages.microsoft.com/keys/microsoft.asc" | gpg --dearmor > packages.microsoft.gpg
	if [ $? -eq 0 ]; then
		sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
		sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
		if [ $? -eq 0 ]; then
			rm -f packages.microsoft.gpg
			sudo apt install apt-transport-https
			sudo apt update && sudo apt install code
			if [ $? -eq 0 ]; then
				code & sleep 5 && sudo killall code && cp -r misc/code/user/* ~/.config/Cod*/User/
				echo -ne "\n\t\t${bold}${red} ~!~!~!~   ${yellow}VS d4Rk-Code done!   ${red}~!~!~!~\n\n"
			else
				echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend getting VS Code ${red}${standout}:/ ${end}${end}\n" && sleep 1 && exit 1
			fi
		else
			echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend getting VS Code ${red}${standout}:/ ${end}${end}\n" && sleep 1 && exit 1
		fi
	else
		echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend getting VS Code ${red}${standout}:/ ${end}${end}\n" && sleep 1 && exit 1
	fi

	tput civis
}

function code_fed() {
	tput cnorm

	echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Installin VS Code ${end}${cyan}--> \n\n"
	sleep 2 && sudo rpm --import "https://packages.microsoft.com/keys/microsoft.asc" &&
	sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
	if [ $? -eq 0 ]; then
		dnf check-update && sudo dnf install code
		code & disown; sleep 3 && sudo killall code && cp -r misc/code/user/* ~/.config/Cod*/User/
		echo -ne "\n\t\t${bold}${red} ~!~!~!~   ${yellow}VS Code done!   ${red}~!~!~!~\n\n" && sleep 2
	else
		echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend getting VS Code ${red}${standout}:/ ${end}${end}\n" && sleep 1 && exit 1
	fi

	tput civis
}

	# --> downloading & installing Lsd
function lsd_deb(){
	tput cnorm

	echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Downloading lsd ${end}${cyan}--> \n\n"
	sleep 2 && wget "https://github.com/lsd-rs/lsd/releases/download/0.23.1/lsd_0.23.1_amd64.deb" -O lsd.deb && sudo dpkg -i lsd.deb && rm lsd.deb
	if [ $? -eq 0 ]; then
		echo -ne "\n\t\t${bold}${red} ~!~!~!~   ${yellow}Lsd installed!   ${red}~!~!~!~\n\n" && sleep 2
	else
		echo -e "\n\n\t\t${bold}${red}<|[!]|> ${black} Something went wrong getting lsd  ${red}${standout} :/${end}${end}\n\n\n" && sleep 1 && exit 1
	fi

	tput civis
}

	# --> Complie Nvim & cloning NvChad
function nvim() {
	tput cnorm

	echo -ne "\n\n\t${bold}${cyan}<|[+]|> ${blue}Cloning & compiling neovim + cloning NvChad${cyan} -->\n\n\n" && sleep 2 &&
	git clone "https://github.com/neovim/neovim" && cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo && sudo make install
	if [ $? -eq 0 ]; then
		rm -rf ~/.config/nvim; rm -rf ~/.local/share/nvim; rm -rf ~/.cache/nvim; sudo rm -rf ~/.config/nvim; sudo rm -rf ~/.local/share/nvim; sudo rm -rf ~/.cache/nvim
		sudo rm -rf /root/.config/nvim; sudo rm -rf /root/.local/share/nvim; sudo rm -rf /root/.cache/nvim; sudo rm -rf /root/.config/nvim; sudo rm -rf /root/.local/share/nvim; sudo rm -rf /root/.cache/nvim
		if [ $? -eq 0 ]; then
			git clone --depth 1 "https://github.com/NvChad/NvChad" ~/.config/nvim  && sudo git clone --depth 1 "https://github.com/NvChad/NvChad" /root/.config/nvim
			if [ $? -eq 0 ]; then
				cd .. && rm -rf neovim
				if [ $? -eq 0 ]; then
					echo -ne "\n\t\t${bold}${red}~!~!~!~   ${yellow}Nvim NvChad done!${red}   ~!~!~!~ ${standout}${black}:~D${end}${end}\n\n" && sleep 2
				else
					echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red} Something went bad removing neovim folder ${red}${standout}:/  ${end}${end}\n\n\n" && sleep 1 && exit 1
				fi
			else
				echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red} Something went bad cloning NvChad repo ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 1 && exit 1
			fi
		else
			echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red}  Something went bad removing od folders ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 1 && exit 1
		fi
	else
		echo -ne "\n\n\t\t${bold}${cyan}<|[!]|> ${red}  Something went bad compiling neovim ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 1 && exit 1
	fi

	tput civis
}

	# --> Complie Bspwm & Sxhkd
function compile_bspwm(){
	tput cnorm

	echo -ne "\n\n\t${bold}${cyan}<|[+]|>${green}$ Cloning bspwm & sxhkd${cyan} -->${end}${cyan}\n\n"
	sleep 2 && git clone "https://github.com/baskerville/bspwm.git" && cd bspwm && make && sudo make install
	if [ $? -eq 0 ]; then
		echo -ne "\n\t\t${bold}${cyan}<|[+]|>${green} Cloning Sxhkd ${cyan}-->\n\n\n" && sleep 2 &&
		git clone "https://github.com/baskerville/sxhkd.git" && cd sxhkd && make && sudo make install
		if [ $? -eq 0 ]; then
			echo -ne "\n\t\t${bold}${red}<|[*]|> ~!~!~!~   ${yellow}Bspwm & sxhkd done!   ${red}~!~!~!~\n\n" && sleep 1 && rm -rf ../../bspwm
		else
			echo -e "\n\t\t${bold}${red}<|[!]|> ${green} Failing compiling Sxhkd ${cyan}${standout}:/ ${end}${end}\n" && sleep 1 && exit 1
		fi
	else
		echo -e "\n\t\t${bold}${red}<|[!]|> ${cyan}Failing Compliling bspwm ${red}${standout}:/  ${end}${end}\n" && sleep 1 && exit 1
	fi

	tput civis
}

	# --> Compile Picom
function compile_picom(){
	tput cnorm

	echo -ne "\n\t${bold}${cyan}|[+]|> ${end}${bold}${white}${bold} Cloning & compliling Picom ${end}${cyan}-->${cyan}\n\n\n"
	sleep 2 && git clone "https://github.com/yshui/picom.git" && cd picom
	if [ $? -eq 0 ]; then
		git submodule update --init --recursive && meson setup --buildtype=release . build
		if [ $? -eq 0 ]; then
			ninja -C build && ninja -C build install
			if [ $? -eq 0 ]; then
				echo -ne "\n\t\t${bold}${red}<|[*]|> ~!~!~!~   ${yellow}Picom done!   ${red}~!~!~!~\n\n" && sleep 2 && rm -rf ../picom
			else
				echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Something went wrong Compiling Picom ${red}${standout}:/ ${end}${end}\n" && sleep 1 && exit 1
			fi
		else
			echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}Anything bad happend compiling Picom ${red}${standout}:/ ${end}${end}\n" && sleep 1 && exit 1
		fi
	else
		echo -ne "\n\t\t${bold}${red}<|[!]|> ${green}We Cant Download From Github ${red}${standout}:/ ${end}${end}\n" && sleep 1 && exit 1
	fi

	tput civis
}

	# --> Compile polybar
function compile_polybar(){
	tput cnorm

	echo -ne "\n\t${bold}${cyan}|[+]|> ${green}Cloning & compiling Polybar${cyan}--> ${end}${cyan}\n\n\n" && sleep 2
	git clone --recursive "https://github.com/polybar/polybar" && cd polybar && mkdir build && cd build && cmake ..
	if [ $? -eq 0 ]; then
		make -j$(nproc) && sudo make install
		if [ $? -eq 0 ]; then
			echo -ne "\n\t\t${bold}${red}<|[*]|> ~!~!~!~   ${yellow}Polybar done!   ${red}~!~!~!~\n\n" && sleep2 && rm -rf ../../polybar
		else
			echo -ne "\n\n\t\t${bold}${red}|[!]|> ${cyan}Failing compiling Polybar ${red}${standout}:/  ${end}${end}\n" && sleep 2 && exit 1
		fi
	else
	    echo -e "\n\n\t\t${bold}${red}<|[!]|> ${cyan}Failing compiling Polybar ${red}${standout}:/ ${end}${end}\n" && sleep 2 && exit 1
	fi

	tput civis
}

	# --> Rofi form source
function clone_rofi(){
	tput cnorm

	echo -ne "\n\t${bold}${cyan}|[+]|> ${green}Cloning & installing Rofi ${cyan}-->${end}${end}\n\n\n" && sleep 2
	git clone --depth=1 "https://github.com/adi1090x/rofi.git" && cd rofi
	if [ $? -eq 0 ]; then
		chmod +x setup.sh && ./setup.sh
		if [ $? -eq 0 ]; then
			echo -ne "\n\t\t${bold}${red}<|[*]|> ~!~!~!~   ${yellow}Rofi done!   ${red}~!~!~!~" && sleep2 && rm -rf ../rofi
        else
            echo -e "\n\n\t\t${bold}${red}<|[!]|> ${cyan}Failing setup Rofi ${red}${standout}:/ ${end}${end}\n" && sleep2 && exit 1
        fi
	else
        echo -e "\n\n\t\t${bold}${red}<|[!]|> ${cyan}Failing cloning Rofi ${red}${standout}:/ ${end}${end}\n" && sleep2 && exit 1
	fi

	tput civis
}

	# --> Nice t@@L! ;D
function htb-Xplorer(){
	tput cnorm

	if [ -d "/opt/h4Ck/htbXplorer-Plus" ]; then
		echo -ne "\n\n${bold}${cyan}<|[+]|> ${end}${yellow}htb-Xplorer already in the system ${bold}${cyan}^${bold}${red}~${bold}${cyan}^${end}${cyan}\n\n" && sleep 2
	else
		echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Cloning htbXplorer from github${cyan}--> ${end}${cyan}\n\n"
		sleep 2 && sudo mkdir -p /opt/h4Ck/htbXplorer-Plus
	    if [ $? -eq 0 ]; then
			sudo git clone "https://github.com/4tz1Lu7h/htbXplorer-Plus.git" /opt/h4Ck/htbXplorer-Plus
		    if [ $? -eq 0 ]; then
				sudo chmod +x /opt/h4Ck/htbXplorer-Plus/htbXplorer
				echo -ne "\n\t\t${bold}${purple}~!~!~!~   ${cyan}HtbXplorer-${red}Plus ${cyan}done!   ${purple} ~!~!~!~\n\n"
			else
		        echo -e "\n\n\t\t${bold}${red}<|[!]|> ${cyan}Something went bad cloning the repo ${red}${standout}:/ ${end}${end}\n" && sleep2 && exit 1
			fi
		else
        	echo -e "\n\n\t\t${bold}${red}<|[!]|> ${cyan}Something went bad creating the folder ${red}${standout}:/ ${end}${end}\n" && sleep2 && exit 1
		fi
	fi

	tput civis
}

#---------------------------------------------------------------------------------------------------------------------------------------------------------
# --> Main
#--------------------------------------------------------------------------------------------------------------------------------------------------------

if [ "$EUID" == 0 ];then
	echo -e "\n\n\t${bold}${red}<|[!]|[!]|> ${cyan}You do not to be ${red}root ${cyan}to execute this script ${standout}${red}; )${end}\n\n" && sleep 1 && exit
fi

banner

echo -ne "\n${bold}${cyan}|[*]|> ${end}${blue}This Script Will Add ${cyan}Bspwm ${end}${blue}Desktop Eviroment To Your Linux."
echo -ne "\n\t${blue}- It Will ${cyan}Overwrite ${blue}Some Files Stored In Your ${bold}${purple}~/.config/${end}${blue}.\n"
echo -ne "\t${blue}- Which includes: ${cyan}Bspwm${blue},${cyan} Sxhkd${blue},${cyan} Polybar${blue}, ${cyan}Rofi${blue}, ${cyan}Picom ${blue}& ${cyan}Kitty${blue}.\n\n"
echo -ne "${bold}${cyan}|[*]|>${end}${blue}	~ If you have any personal configuration in any of this folders, \n"
echo -ne "\t${blue}it is better to use a virtual machine or create a new user instead${bold}${cyan} :)${end}\n\n\n"
echo -ne "\t${red}${bold}<|[!]|> ${cyan}Are you sure you want to ${red}continue? ${cyan}--> ${purple}(y/n)${end}\n\n"

read answer

if [ "$answer" != "${answer#[Yy]}" ]; then
	if cat /etc/*release | grep "^NAME" | grep -Ei "Kali" > /dev/null; then

		echo -e "${blue}${bold}======================================================================== "
		echo -e "${blue}${bold}     -|-|-|-|- ${cyan}Installing package for ${red}Kali ${cyan}distribution ${blue}-|-|-|-|-"
		echo -e "${blue}${bold}======================================================================== "

		echo -ne "\n\t${cyan}${bold}<|[+]|> ${blue}Upgrading System ${cyan}--> \n\n"
		sleep 2 && sudo apt update && sudo apt autoremove -y && sudo apt upgrade -y
		if [ $? -eq 0 ]; then
			echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Installing Packages${cyan} --> \n\n\n"
			sleep 2 && sudo apt install -y $packages_Deb lsd && sudo apt autoremove -y
			if [ $? -eq 0 ]; then
				htb-Xplorer && code_deb
				if [ $? -eq 0 ]; then
					nvim && echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Setting Mozilla theme${cyan}\n"
					sleep 2 && firefox-esr && sleep 3 && sudo killall firefox-esr && sleep 2 && cp -r misc/chrome ~/.mozilla/firefox/*default-esr/
					if [ $? -eq 0 ]; then
						echo -ne "\n${bold}${red}>> ${yellow}Themes done${red}!!!\n\n"
						sleep 2 && main
						if [ $? -eq 0 ]; then
							echo -ne "\n${bold}${red}-> ${bue}To-Dos${red}:${end} \
							\n\t${bold}${blue}~ Open a terminal & type ${bold}${cyan}nvim ${blue}to finish its configuration.\n \
							\n\t${blue}~ For dark theme Firefox, open it & type:\
							\n\n\t${bold}${white}<${cyan}toolkit.legacyUserProfileCustomizations.stylesheets${white}>${blue}, and set it to ${cyan}True${blue}.${end}${end}\n"
							sleep 1 && echo -ne "\n\n\n${bold}${red} ---/-/-/-/--->>  ${yellow} Try reboot and select ${red}Bspwm ${yellow}as desktop evironment. ${red}Enjoy${yellow}!! ;) ${red}<<---\-\-\-\----${end}${end}${end}\n\n\n" && sleep 2	
						else
							echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad with the main installation ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
						fi
					else
						echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad with nvim package ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
					fi
				else
					echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad with cloning htb-Xplorer repo ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
				fi
			else
				echo -ne "\n\n\t${bold}${red}<|[!]|>${yellow} Something went wrong installing the packages ${standout}${red}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
			fi
		else
			echo -ne "\n\n\t${bold}${red}<|[!]|> ${end}${bold}${yellow} Something went bad upgrading the System!! ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
		fi

	elif cat /etc/*release | grep "^NAME" | grep -Ei "Parrot" > /dev/null; then

		echo -e "${blue}${bold}======================================================================== "
		echo -e "${blue}${bold}   -|-|-|-|- ${cyan}Installing package for ${red}Parrot OS ${cyan}distribution ${blue}-|-|-|-|-"
		echo -e "${blue}${bold}======================================================================== "

		echo -ne "\n\t${cyan}${bold}<|[+]|> ${blue}Upgrading System ${cyan}--> \n\n"
		sleep 2 && sudo apt update && sudo apt autoremove -y && sudo parrot-upgrade -y
		if [ $? -eq 0 ]; then
			echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Installing Packages${cyan} --> \n\n\n"
			sleep 2 && sudo apt install -y $packages_Deb firefox-esr && sudo apt autoremove -y
			if [ $? -eq 0 ]; then
				htb-Xplorer && code_deb
				if [ $? -eq 0 ]; then
					nvim && lsd_deb
					echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Setting Mozilla and Code theme${cyan}\n"
					sleep 2 && firefox-esr & disown; sleep 3 && sudo killall firefox-esr && sleep 2 && cp -r misc/chrome ~/.mozilla/*default-esr/
					if [ $? -eq 0 ]; then
						echo -ne "\n${bold}${red}>> ${yellow}Themes done${red}!!!\n\n"
						sleep 2 && main
						if [ $? -eq 0 ]; then
							echo -ne "\n${bold}${red}-> ${bue}To-Dos${red}:${end} \
							\n\t${bold}${blue}~ Open a terminal & type ${bold}${cyan}nvim ${blue}to finish its configuration.\n \
							\n\t${blue}~ For dark theme Firefox, open it & type:\
							\n\n\t${bold}${white}<${cyan}toolkit.legacyUserProfileCustomizations.stylesheets${white}>${blue}, \
							and set it to ${cyan}True${blue}.${end}${end}\n"
							sleep 1 && echo -ne "\n\n\n${bold}${red}---/-/-/-/--->>${yellow} Try reboot and select ${red}Bspwm ${yellow}as desktop evironment. ${red}Enjoy${yellow}!! ;) ${red} <--\-\-\-\---${end}${end}${end}\n\n\n" && sleep 2
						else
							echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad with the main installation ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
						fi
					else
						echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad with nvim package ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
					fi
				else
					echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad with cloning htb-Xplorer repo ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
				fi
			else
				echo -ne "\n\n\t${bold}${red}<|[!]|>${yellow} Something went wrong installing the packages ${standout}${red}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
			fi
		else
			echo -ne "\n\n\t${bold}${red}<|[!]|> ${end}${bold}${yellow} Something went bad upgrading the System!! ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
		fi


	elif cat /etc/*release | grep "^NAME" | grep -Ei "Ubuntu" > /dev/null; then

		echo -e "${blue}${bold}======================================================================== "
		echo -e "${blue}${bold}   -|-|-|-|- ${cyan}Installing package for ${red}Ubuntu ${cyan}distribution ${blue}-|-|-|-|-"
		echo -e "${blue}${bold}======================================================================== "

		echo -ne "\n\t${cyan}${bold}<|[+]|> ${blue}Upgrading System ${cyan}--> \n\n"
		sleep 2 && sudo apt update && sudo apt autoremove -y && sudo apt upgrade -y
		if [ $? -eq 0 ]; then
			echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Installing Packages${cyan} --> \n\n\n"
			sleep 2 && sudo apt install -y $packages_Deb && sudo apt autoremove -y
			if [ $? -eq 0 ]; then
				htb-Xplorer && code_deb
				if [ $? -eq 0 ]; then
					nvim && lsd_deb
					if [ $? -eq 0 ]; then
						echo -ne "\n\t${bold}${cyan}<|[+]|> ${blue}Installing firefox-esr & setting dark theme${cyan}! \n"
						sleep 2 && sudo add-apt-repository ppa:mozillateam/ppa && sudo apt update && sudo apt install firefox-esr
						sleep 2 && firefox-esr & disown; sleep 3 && sudo killall firefox-esr && sleep 2 && cp -r misc/chrome ~/.mozilla/*default-esr*/
						if [ $? -eq 0 ]; then
							echo -ne "\n${bold}${red}>> ${yellow}Firefox-esr dark theme done${red}!!!\n\n"
							sleep 2 && main
							if [ $? -eq 0 ]; then
								echo -ne "\n${bold}${red}-> ${bue}To-Dos${red}:${end} \
								\n\t${bold}${blue}~ Open a terminal & type ${bold}${cyan}nvim ${blue}to finish its configuration.\n \
								\n\t${blue}~ For dark theme Firefox, open it & type:\
								\n\n\t${bold}${blue}<${cyan}toolkit.legacyUserProfileCustomizations.stylesheets${blue}>${blue}, and set it to ${cyan}True${blue}.${end}${end}\n"
								sleep 1 && echo -ne "\n\n\n${bold}${red} ---/-/-/-/--->>${yellow} Try reboot and select ${red}Bspwm ${yellow}as desktop evironment. ${red}Enjoy${yellow}!! ;) ${red}} <--\-\-\-\---${end}\n\n\n" && sleep 2 && exit 1
							else
								echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad installing firefox-esr ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2
								exit 1
							fi
						else
							echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad Installing firefox-esr ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
						fi
					else
						echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad with nvim package ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
					fi
				else
					echo -ne "\n\n\t${bold}${red}<|[!]|> ${yellow}Something went bad with cloning htb-Xplorer repo || getting Vscode ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
				fi
			else
				echo -ne "\n\n\t${bold}${red}<|[!]|>${yellow} Something went wrong installing the packages ${standout}${red}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
			fi
		else
			echo -ne "\n\n\t${bold}${red}<|[!]|> ${end}${bold}${yellow} Something went bad upgrading the System!! ${red}${standout}:/ ${end}${end}\n\n\n" && sleep 2 && exit 1
		fi


	elif cat /etc/*release | grep "^NAME" | grep -Ei "Arch" > /dev/null; then

		echo -e "\n\n\t${blue}${bold}======= ${cyan}Sorry.. Still in development for ${bold}${yellow}Arch ${cyan}Distro ${end}${blue}======= \n\n" && sleep 2 && exit 1

	elif cat /etc/*release | grep "^NAME" | grep -Ei "Fedora" > /dev/null; then

		echo -e "\n\n\t${blue}${bold}======= ${cyan}Sorry.. Still in development for ${bold}${yellow}Fedora ${cyan}Distro ${end}${blue}======= \n\n" && sleep 2 && exit 1
	else
		echo -ne "\n\t${bold}${red}<|[!]|> ${blue}Sorry, this ${red}OS ${blue}is ${white}Yet ${red}not ${blue}supported!! ${standout}${red}:~(${end}\n\n\n" && sleep 2 && sleep 1
	fi
else
	sleep 2 && echo -ne "\n\n\t${bold}${blue}~~~~~~~~~   ${red}< ${cyan}< ${red}< ${yellow}| ${cyan}[ ${red}~ ${yellow}By3 ${red}~ ${cyan}] ${yellow}| > ${cyan}> ${red}>   ${blue}~~~~~~~~~\n\n\n"
fi
